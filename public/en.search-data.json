{"/i4ox-knowledge-base/docs/":{"data":{"моя-база-знаний#Моя база знаний":"Моя база знаний Мои заметки о Rocky Linux Мои заметки о SSH "},"title":"_index"},"/i4ox-knowledge-base/docs/rocky_linux/":{"data":{"rocky-linux#Rocky Linux":"Rocky Linux"},"title":"_index"},"/i4ox-knowledge-base/docs/rocky_linux/%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE%D0%BA%D0%B0%D1%80%D1%82%D1%8B/":{"data":{"#":"Настройка видеокартыNvidia Установка заголовков и необходимых пакетов для ядра. sudo dnf install kernel-devel kernel-headers pciutils dkms Установка драйвера Nvidia sudo dnf install akmod-nvidia sudo dnf install xorg-x11-drv-nvidia-cuda ","настройка-видеокарты#Настройка видеокарты":""},"title":"настройка видеокарты"},"/i4ox-knowledge-base/docs/rocky_linux/%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D1%8B/":{"data":{"автоматическое-обновление#Автоматическое обновление":" Устанавливаем dnf-automatic sudo dnf install dnf-automatic Настройка сервиса sudo nano -W /etc/dnf/automatic.conf # update_type = security Запускаем сервис(демона) sudo systemctl enable dnf-automatic-install.timer sudo systemctl status dnf-automatic-install sudo systemctl cat dnf-automatic-install.timer ","обновление-системы#Обновление системы":"Обновление системы","ручное-обновление#Ручное обновление":" Проверяем есть ли обновления sudo dnf check-update Устанавливаем только необходимые баг-фиксы sudo dnf updgrade-minimal Обновляем все sudo dnf update "},"title":"обновление системы"},"/i4ox-knowledge-base/docs/rocky_linux/%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-%D1%82%D0%B5%D0%BC%D1%8B/":{"data":{"#":"Установка темыУстановку темы я буду производить на примере Arc Dark.\nУстановка GTK темы Устанавливаем зависимости sudo dnf install meson ninja-build sassc glib2-devel inkscape gnome-themes-extra gtk-murrine-engine Собираем тему git clone https://github.com/jnsh/arc-theme --depth 1 cd arc-theme meson setup --prefix=$HOME/.local -Dvariants=dark -Dthemes=gnome-shell,gtk2,gtk3,gtk4,metacity,plank build/ meson install -C build/ mv ~/.local/share/themes/* ~/.themes/ Установка KDE темы Скоро будет…","установка-темы#Установка темы":""},"title":"установка темы"},"/i4ox-knowledge-base/docs/rocky_linux/epel-%D0%B8-rpmfusion/":{"data":{"extra-packages-for-enterprise-linux-и-rpmfusion#Extra Packages For Enterprise Linux и RPMFusion":"Extra Packages For Enterprise Linux и RPMFusion Установка EPEL sudo dnf config-manager --set-enabled crb sudo dnf install epel-release sudo /usr/bin/crb enable Установка RPMFusion sudo dnf install --nogpgcheck https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E %rhel).noarch.rpm sudo dnf install --nogpgcheck https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm -E %rhel).noarch.rpm "},"title":"EPEL и RPMFusion"},"/i4ox-knowledge-base/docs/ssh/":{"data":{"ssh#SSH":"SSH","ssh-agent#SSH-agent":"ssh-agent - менеджер ключей для SSH. Он хранит ваши ключи и сертификаты в памяти, незашифрованные и готовые к использованию ssh. Это избавляет вас от необходимости вводить пароль каждый раз, когда вы подключаетесь к серверу. Он работает в фоновом режиме в вашей системе, отдельно от ssh, и обычно запускается при первом запуске ssh.\nЧтобы добавить пароль от приватного ключа:\nssh-add ~/.ssh/key ","ssh-copy-id#SSH-copy-id":"Чтобы скопировать ключ на сервер используем комманду ниже:\nssh-copy-id -i ~/.ssh/key user@host Не забываем про выдачу необходимых прав.\nchown -R user:user /home/user/.ssh chmod 700 ~/.ssh chmod 644 ~/.ssh/* chmod 600 ~/.ssh/id_* ~/.ssh/authorized_keys ","sshd_config#sshd_config":"Лучшие практики Меняем порт с 22 на любой другой PermitRootLogin no PubkeyAuthentication yes PasswordAuthencication no (исключительно после настройки ключей) PermitEmptyPasswords no (не имеет смысла, если соблюдать 4 пункт) ","генерация-ssh-ключей#Генерация ssh-ключей":" ssh-keygen -t ed25519 -f ~/.ssh/key -C \"comment\" ","настройки-клиента#Настройки клиента":"Клиент SSH настраивается через файл ~/.ssh/config.\nПример настроек:\nHost server StrictHostKeyChecking no User sampleuser ForwardAgent yes IdentityFile /Users/username/.ssh/id_rsa IdentitiesOnly yes UserKnownHostsFile=/dev/null UseKeychain yes AddKeysToAgent yes ServerAliveInterval 60 ServerAliveCountMax 1200 Далее делается подключение через команду ниже:\nssh server ","подключение-по-ssh#Подключение по SSH":" ssh -i ~/.ssh/key user@host ","пробрасывание-портов#Пробрасывание портов":" ssh -L 9000:localhost:8000 user@server Командой выше мы создали подключение через SSH-туннель, с пробросом внешнего 8000 порта на локальный 9000 порт. И после этого НЕ ЗАКРЫВАЯ соединения, в другой вкладке терминала мы сможет обращаться по этому порту."},"title":"_index"},"/i4ox-knowledge-base/profile/":{"data":{"немножко-обо-мне#Немножко обо мне":"Увлечения Введение блога по Linux/DevOps. Чтение книг(либо фэнтези, либо тех. литература, когда как) Разработка своей сборки NeoVim, которая бы покрывала все нужды DevOps. Мои цели Начать делать технический контент(статьи, видео). Мне нравится суть идеи такого подхода как Developer Advocate. Окончательно разобраться в написании и настройке кластеров Kubernetes с нуля(без преднастроенных кластеров с облаков). Мои контакты Мои проекты Knowledge Base - сайт со всеми моими заметками, а также блог. NvOps - Neovim-сборка для DevOps. ibmc_flutter_app_template и ibmc_blood_metabograms - открытый код проекта от ИБМХ, точнее та часть которую я использовал для курсовой на втором курсе. ","образование#Образование":"МИРЭА - 09.03.04 Программная Инженерия На данный момент нахожусь на 3 курсе по направлению Программная Инженерия в МИРЭА.\nМИРЭА - Второе высшее образование - Технологии DevOps На момент конца 2 курса имеется законченное второе высшее образование по направлению DevOps. Выпускная курсовая работа(диплом) был закрыт на отлично.\nВАЖНО: Диплом о завершении второго высшего выдается после окончания первого, так что на руках его не имеется.","приветствую#Приветствую!":"Приветствую!Меня зовут Артур(Лохов Артур Петрович), данная страница моего сайта посвешена краткой информации обо мне, выступает в роли резюме.","стек-технологий#Стек технологий":"На текущий момент я владею следующими навыками:\nAtlassian-стек: Jira, Confluence, BitBucket CI/CD: Jenkins, Github Actions VM: VMWare, Proxmax Linux: RHEL-based, Debian, Gentoo Rocky Linux моя основная машина; Debian использую почти на всех серверах; На Gentoo у меня настроен роутер - ну не захотел я OpenWrt :) Контейнеры: Docker, K8s, Helm Написание скриптов, программирование: Go, Python, Bash Go для написание провайдером для Tf; Python из-за удобных инструментов и надобности их настройки и запуска; Bash - без него ни куда, вода и хлеб. "},"title":"index"}}